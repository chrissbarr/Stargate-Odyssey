<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprController</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objParent_enginemasters</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*GAMECAVE EFFECTS ENGINE 3.X
Read the GCE3X documentation before using this code!

Object Name - objParticle_collisions
Engine - Particle Collisions Engine 
Purpose - The master object for particle-collisions; creates the global system and calls for objects to 
create their collision-regions for the particles.
*/

global.sky_type = 0; //Set this engines sky.
global.pt_sys = part_system_create(); //Creates a global particle system that will hold all collision-regions/positions
part_system_depth(global.pt_sys,1); //Set the depth of the particle system.
part_system_draw_order(global.pt_sys,1); //Draw older particles in front of new particles.
emitter_middle = part_emitter_create(global.pt_sys) //Create emitter into the global-system.
part_emitter_region(global.pt_sys,emitter_middle,room_width/2,room_width/2,room_height/2,room_height/2,ps_shape_diamond,ps_distr_linear) //Set region to middle of room

emitter_left = part_emitter_create(global.pt_sys) //Create emitter into the global-system.
part_emitter_region(global.pt_sys,emitter_left,room_width/4,room_width/4,room_height/2,room_height/2,ps_shape_diamond,ps_distr_linear) //Set region to middle of room

emitter_right = part_emitter_create(global.pt_sys) //Create emitter into the global-system.
part_emitter_region(global.pt_sys,emitter_right,(room_width/4)*3,(room_width/4)*3,room_height/2,room_height/2,ps_shape_diamond,ps_distr_linear) //Set region to middle of room

//Test-Particles
part = part_type_create(); 
part_type_alpha2(part,1,0);
part_type_color1(part,c_yellow);
part_type_direction(part,point_direction(x,y,mouse_x,mouse_y)-10,point_direction(x,y,mouse_x,mouse_y)+10,0,0);
part_type_life(part,80,100);
part_type_orientation(part,0,360,0,0,0);
part_type_shape(part,pt_shape_disk);
part_type_size(part,0.2,0.3,0,0);
part_type_speed(part,5,7,0,0);

//Test-Particles when Collided with a Changer-Wall
part_col = part_type_create(); 
part_type_alpha2(part_col,1,0);
part_type_color1(part_col,c_dkgray);
part_type_direction(part_col,88,92,0,0);
part_type_life(part_col,80,100);
part_type_orientation(part_col,0,360,0,0,0);
part_type_shape(part_col,pt_shape_smoke);
part_type_size(part_col,0.1,0.2,0.01,0);
part_type_speed(part_col,5,7,0,0);

with(objPC_wall_destroyer){event_user(0)} //Tell all destroyers that the system is ready to have filters put into them.
with(objPC_wall_deflector){event_user(0)} //Tell all deflectors that the system is ready to have filters put into them.
with(objPC_wall_changer){event_user(0)} //Tell all changers that the system is ready to have filters put into them.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(global.pt_sys) //Scrap the global-system.</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_direction(part,point_direction(room_width/2,room_height/2,mouse_x,mouse_y)-10,point_direction(room_width/2,room_height/2,mouse_x,mouse_y)+10,0,0); //reset the direction to the mouse position
part_emitter_burst(global.pt_sys,emitter_middle,part,5) //burst particles
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_direction(part,point_direction((room_width/4)*3,room_height/2,mouse_x,mouse_y)-10,point_direction((room_width/4)*3,room_height/2,mouse_x,mouse_y)+10,0,0); //reset the direction to the mouse position
part_emitter_burst(global.pt_sys,emitter_right,part,5) //burst particles
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_direction(part,point_direction(room_width/4,room_height/2,mouse_x,mouse_y)-10,point_direction(room_width/4,room_height/2,mouse_x,mouse_y)+10,0,0); //reset the direction to the mouse position
part_emitter_burst(global.pt_sys,emitter_left,part,5) //burst particles
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(global.pt_sys) //Scrap the global-system.</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
