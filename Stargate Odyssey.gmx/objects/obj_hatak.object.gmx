<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hatak</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_entity_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

shield = 80;
shield_radius = 77;
hp = 30;
max_speed = 4;
turn_speed = 1;
image_speed = 0;
friction = 0.1;

range_max = 200;

team = 1;

can_fire = true;

gun_coords_x = ds_list_create();
gun_coords_y = ds_list_create();

ds_list_add(gun_coords_x, 110);
ds_list_add(gun_coords_y, 58);
ds_list_add(gun_coords_x, 77);
ds_list_add(gun_coords_y, 117);
ds_list_add(gun_coords_x, 43);
ds_list_add(gun_coords_y, 59);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat 5
{
    var debris = instance_create(x, y, obj_hatak_debris_peice);
    debris.hspeed += hspeed;
    debris.vspeed += vspeed;
}

instance_create(x, y, obj_hatak_destroyed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_fire = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle += turn_speed;

if (shield &lt; 1)
{
    image_index=1
}

if (hp &lt; 0)
{
    instance_destroy()
}

image_speed = 0;

target = ai_get_nearest_enemy();

if (target != noone &amp;&amp; instance_exists(target)) 
{
    if (distance_to_object(target) &gt; range_max * 0.8)
    {
        motion_add(point_direction(x, y, target.x, target.y), 0.2);
    }
    
    if (distance_to_object(target) &lt; 100)
    {
        motion_add(point_direction(x, y, target.x, target.y), -0.1);
    }
    
    if (can_fire &amp;&amp; distance_to_object(target) &lt; range_max)
    {
        // pick a turret to fire from
        var fire_x, fire_y;        
        var random_gun_index = irandom(ds_list_size(gun_coords_x) - 1);        
        var gunLength = point_distance(sprite_get_xoffset(sprite_index), sprite_get_yoffset(sprite_index), gun_coords_x[| random_gun_index], gun_coords_y[| random_gun_index]);
        var gunDir = point_direction(sprite_get_xoffset(sprite_index), sprite_get_yoffset(sprite_index), gun_coords_x[| random_gun_index], gun_coords_y[| random_gun_index]);
        var fire_x = x + lengthdir_x(gunLength, image_angle + gunDir);
        var fire_y = y + lengthdir_y(gunLength, image_angle + gunDir);
        
        // create the projectile
        var bullet = instance_create(fire_x, fire_y, obj_hatak_bolt);
        bullet.direction = point_direction(fire_x, fire_y, target.x, target.y);
        bullet.team = team;
        audio_play_sound(snd_hatak_bolt, 0, false);
        
        // begin waiting for next firing time
        can_fire = false;
        alarm[0] = irandom_range(room_speed / 4, room_speed / 2);
    }
}

friend = ai_get_nearest_ally();

if (friend != noone &amp;&amp; instance_exists(friend)) 
{
    if (distance_to_object(friend) &gt; 150)
    {
        motion_add(point_direction(x, y, friend.x, friend.y), 0.1);
    }
    
    if (distance_to_object(friend) &lt; 50)
    {
        motion_add(point_direction(x, y, friend.x, friend.y), -0.1);
    }
}

if (instance_exists(obj_ai_attract))
{
    var nearest_attract = instance_nearest(x, y, obj_ai_attract);
    if (distance_to_object(nearest_attract) &gt; 20)
    {
        motion_add(point_direction(x, y, nearest_attract.x, nearest_attract.y), 0.1);
    }
}

if (speed &gt; max_speed) {
    speed = max_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shield &gt; 0) 
{
    draw_set_color(c_orange);
    draw_set_circle_precision(64);
    draw_circle(x, y, shield_radius, true);
    sprite_index = spr_hatak_shield;
}
else
{
    sprite_index = spr_hatak;
}

draw_sprite_ext(sprite_index, -1, x, y, 1, 1, image_angle, c_white, 1);
draw_healthbar(x, y, x + 50, y + 5, shield, c_red, c_blue, c_blue, 180, false, true);
draw_healthbar(x, y + 5, x + 50, y + 10, hp, c_green, c_red, c_blue, 180, false, true);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
